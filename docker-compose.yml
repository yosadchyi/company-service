version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: companies
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper

  kafka-init:
    image: bitnami/kafka:latest
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      sleep 5 &&
      kafka-topics.sh --create --if-not-exists --topic company-events
      --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
      "
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: company-service
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=configs/config.yaml
    depends_on:
      - db
      - kafka-init

volumes:
  pgdata:
